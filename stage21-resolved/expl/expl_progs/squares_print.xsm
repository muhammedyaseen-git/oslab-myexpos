// stage 10
// init program

0
2056
0
0
0
0
0
0
MOV R0, 1
MOV R2, 5
GE R2, R0
JZ R2, 2074
MOV R1, R0
MUL R1, R0

//// console output code

// saving register context
PUSH R0
PUSH R1
PUSH R2

// pushing system call number and arguments
// console output interrupt
MOV R0, 5
// print to terminal
MOV R2, -2
PUSH R0
PUSH R2
PUSH R1
PUSH R0

// pushing space for return value
PUSH R0
INT 7

// pop out return value and ignore
POP R1

// pop out arguments and system call number and ignore
POP R1
POP R1
POP R1
POP R1

// restoring the register context
POP R2
POP R1
POP R1

//// back to normal code

ADD R0, 1
JMP 2058
INT 10
